/* src/app/features/map/map.component.scss */

/* Importa la fuente Roboto de Google Fonts (si no está ya en styles.scss global) */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');

/* Estilos para el contenedor principal de la página del mapa */
.app-container {
  display: flex; /* Usamos flexbox para el layout principal */
  min-height: 100vh; /* Asegura que ocupe toda la altura de la ventana */
  background-color: #fefefe; /* Fondo general */
  font-family: 'Roboto', sans-serif;
}

/* Estilos para el sidebar (asumiendo que tiene un ancho fijo) */
/* Si tu sidebar ya tiene estilos de 'position: fixed' y 'width', estos pueden ser redundantes aquí,
   pero los incluyo para el contexto del layout. */
.sidebar {
  width: 250px; /* Ancho fijo del sidebar */
  min-width: 250px;
  background-color: #FFFFFF;
  box-shadow: 2px 0 8px rgba(0, 0, 0, 0.05);
  position: fixed; /* Fijo en la pantalla */
  height: 100vh;
  top: 0;
  left: 0;
  z-index: 1000;
  overflow-y: auto;
}

/* Contenedor del contenido principal (después del sidebar) */
.content {
  flex-grow: 1; /* Ocupa todo el espacio restante */
  padding: 24px; /* Espaciado interno general */
  box-sizing: border-box;
  margin-left: 250px; /* Desplaza el contenido para dejar espacio al sidebar */
  max-width: calc(100% - 250px); /* Asegura que el contenido no se desborde */
  overflow-y: auto; /* Permite scroll vertical si el contenido es largo */
  min-height: 100vh; /* Asegura que ocupe al menos la altura de la ventana */
  display: flex; /* Usamos flexbox para centrar el map-container */
  justify-content: center; /* Centra horizontalmente el contenido flex */
  align-items: flex-start; /* Alinea al inicio verticalmente (arriba) */

  @media (max-width: 1024px) { /* Para tabletas y móviles */
    margin-left: 0;
    max-width: 100%;
    padding-top: 80px; /* Espacio para un sidebar/header superior */
  }
}

/* Contenedor del mapa/planificador de rutas */
.map-container {
  width: 100%; /* Ocupa todo el ancho disponible dentro de .content */
  max-width: 1000px; /* Ancho máximo para el contenido del mapa/planificador */
  /* margin: 0 auto; */ /* Ya no es necesario si .content usa justify-content: center */
  padding: 0; /* Asegúrate de que no haya padding extra aquí si el componente interno ya lo tiene */
  box-sizing: border-box;
}

/* Asegúrate de que el componente interno (app-travel-route-planner)
   no tenga un ancho fijo que impida el centrado.
   Su propio contenedor principal (.route-planner-container) ya tiene un max-width y margin: auto.
   Si quieres que ocupe el 100% del map-container, asegúrate de que no tenga un max-width.
   En tu travel-route-planner.component.scss, el .route-planner-container ya tiene:
   max-width: 1200px;
   margin: 24px auto;
   Esto ya lo centra dentro de su propio contenedor.
   Así que, el .map-container solo necesita ser un contenedor flexible.
*/
